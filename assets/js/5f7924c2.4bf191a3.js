"use strict";(self.webpackChunkdocion=self.webpackChunkdocion||[]).push([[9100],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),s=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return a.createElement(i.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(r),h=n,d=m["".concat(i,".").concat(h)]||m[h]||u[h]||l;return r?a.createElement(d,o(o({ref:t},p),{},{components:r})):a.createElement(d,o({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=h;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[m]="string"==typeof e?e:n,o[1]=c;for(var s=2;s<l;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},1278:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const l={sidebar_position:2},o="Helm Charts",c={unversionedId:"kubernetes-example/create-chart",id:"kubernetes-example/create-chart",title:"Helm Charts",description:"A helm chart packages an application ready for deployment on a kubernetes cluster.",source:"@site/docs/kubernetes-example/create-chart.md",sourceDirName:"kubernetes-example",slug:"/kubernetes-example/create-chart",permalink:"/docion/docs/kubernetes-example/create-chart",draft:!1,editUrl:"https://github.com/gnuion/docion/tree/gh-edits/docs/kubernetes-example/create-chart.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"MongoDB",permalink:"/docion/docs/kubernetes-example/mongodb-chart"},next:{title:"Rust",permalink:"/docion/docs/category/rust"}},i={},s=[{value:"Basics",id:"basics",level:2},{value:"Create a Helm Chart",id:"create-a-helm-chart",level:3},{value:"Configure Helm Chart",id:"configure-helm-chart",level:3},{value:"Overwrite Chart Name",id:"overwrite-chart-name",level:3},{value:"Set Service Account Name",id:"set-service-account-name",level:3},{value:"Install Helm Chart",id:"install-helm-chart",level:3}],p={toc:s};function m(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"helm-charts"},"Helm Charts"),(0,n.kt)("p",null,"A helm chart packages an application ready for deployment on a kubernetes cluster."),(0,n.kt)("h2",{id:"basics"},"Basics"),(0,n.kt)("h3",{id:"create-a-helm-chart"},"Create a Helm Chart"),(0,n.kt)("p",null,"To create a helm chart run:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"helm create <chart name>\n")),(0,n.kt)("p",null,"To list the newly created files run:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"ls <chart name>\n")),(0,n.kt)("p",null,"The newly created directory contains:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"charts directory")," - contains charts dependencies. Empty by default."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"templates directory")," - contains files that define objects that will be deployed on the kubernetes cluster."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Chart.yaml")," - defines the structure of the Helm Chart"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"values.yaml")," - contains configuration information for the chart.")),(0,n.kt)("h3",{id:"configure-helm-chart"},"Configure Helm Chart"),(0,n.kt)("p",null,"To configure the chart, edit the ",(0,n.kt)("inlineCode",{parentName:"p"},"values.yaml")," file. For example, change the Image Pull Policy"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-diff"},"  image:\n    repository: nginx\n-   pullPolicy: IfNotPresent\n+   pullPolicy: Always\n")),(0,n.kt)("h3",{id:"overwrite-chart-name"},"Overwrite Chart Name"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"nameOverride")," replaces the name of the chart in the Chart.yaml file. When deploying the chart, the release name is appened to the ",(0,n.kt)("strong",{parentName:"p"},"nameOverride"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"fullnameOverride")," replaces the whole name of the deployment and the release name is not appended."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-diff"},'  image:\n    repository: nginx\n-   nameOverride = ""\n-   fullNameOverride = ""\n+   nameOverride = "app-name"\n+   fullNameOverride = "app-name"\n')),(0,n.kt)("h3",{id:"set-service-account-name"},"Set Service Account Name"),(0,n.kt)("p",null,"A service account provides an identity for processes that run in a Pod, and maps to a ServiceAccount object. It is good practice to set it manually."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-diff"},'  serviceAccount:\n    create: true\n    annotations: {}\n-   name: ""\n+   name: "app-name"\n')),(0,n.kt)("h3",{id:"install-helm-chart"},"Install Helm Chart"),(0,n.kt)("p",null,"To install the helm chart, inside the <chart name",">"," folder run:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"helm install <release name> . --values values.yaml\n")))}m.isMDXComponent=!0}}]);