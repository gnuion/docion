"use strict";(self.webpackChunkdocion=self.webpackChunkdocion||[]).push([[4552],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,g=u["".concat(p,".").concat(d)]||u[d]||m[d]||i;return n?r.createElement(g,a(a({ref:t},s),{},{components:n})):r.createElement(g,a({ref:t},s))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5135:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={slug:"vite-import-alias",title:"Vite Import Alias",authors:["gnuion"],tags:["vite","frontend"]},a=void 0,l={permalink:"/docion/blog/vite-import-alias",editUrl:"https://github.com/gnuion/docion/tree/gh-edits/blog/2022-11-9-vite-alias/index.mdx",source:"@site/blog/2022-11-9-vite-alias/index.mdx",title:"Vite Import Alias",description:"Under vite.config.ts, inside the defineConfig object, add:",date:"2022-11-09T00:00:00.000Z",formattedDate:"November 9, 2022",tags:[{label:"vite",permalink:"/docion/blog/tags/vite"},{label:"frontend",permalink:"/docion/blog/tags/frontend"}],readingTime:.24,hasTruncateMarker:!1,authors:[{name:"Jon Zuka",title:"Blog owner",url:"https://github.com/gnuion",imageURL:"https://github.com/gnuion.png",key:"gnuion"}],frontMatter:{slug:"vite-import-alias",title:"Vite Import Alias",authors:["gnuion"],tags:["vite","frontend"]},prevItem:{title:"Redux Toolkit Template",permalink:"/docion/blog/redux-toolkit-template"},nextItem:{title:"Kubernetes Nginx Ingress",permalink:"/docion/blog/k8s-nginx-ingress"}},p={authorsImageUrls:[void 0]},c=[],s={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Under ",(0,o.kt)("inlineCode",{parentName:"p"},"vite.config.ts"),", inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"defineConfig")," object, add:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"defineConfig: {\n  resolve: {\n    alias: {\n      '@': path.resolve(__dirname, './src')\n    }\n  }\n}\n")),(0,o.kt)("p",null,"Then, under ",(0,o.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),", inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"compilerOptions")," object, add:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"compilerOptions": {\n  "paths": {\n    "@/*": ["./src/*"]\n  }\n}\n')),(0,o.kt)("p",null,"Now, instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"../../../component"),", you can simply use ",(0,o.kt)("inlineCode",{parentName:"p"},"@/component"),"."))}u.isMDXComponent=!0}}]);