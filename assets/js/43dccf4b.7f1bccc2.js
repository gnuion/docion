"use strict";(self.webpackChunkdocion=self.webpackChunkdocion||[]).push([[7233],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),s=u(r),m=a,g=s["".concat(l,".").concat(m)]||s[m]||c[m]||o;return r?n.createElement(g,i(i({ref:t},p),{},{components:r})):n.createElement(g,i({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=s;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d.mdxType="string"==typeof e?e:a,i[1]=d;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},1548:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const o={slug:"raid0-with-mdadm",title:"Make RAID0 array using MDADM",authors:["gnuion"],tags:["web3"]},i=void 0,d={permalink:"/docion/blog/raid0-with-mdadm",editUrl:"https://github.com/gnuion/docion/tree/gh-edits/blog/2022-10-15-raid0-with-mdadm/index.mdx",source:"@site/blog/2022-10-15-raid0-with-mdadm/index.mdx",title:"Make RAID0 array using MDADM",description:"Sometimes you need RAID0 for increased capacity and speed.",date:"2022-10-15T00:00:00.000Z",formattedDate:"October 15, 2022",tags:[{label:"web3",permalink:"/docion/blog/tags/web-3"}],readingTime:.745,hasTruncateMarker:!1,authors:[{name:"Jon Zuka",title:"Blog owner",url:"https://github.com/gnuion",imageURL:"https://github.com/gnuion.png",key:"gnuion"}],frontMatter:{slug:"raid0-with-mdadm",title:"Make RAID0 array using MDADM",authors:["gnuion"],tags:["web3"]},prevItem:{title:"Angular in Docker",permalink:"/docion/blog/angular-in-docker"},nextItem:{title:"Build Chia Docker Container",permalink:"/docion/blog/build-chia-docker-container"}},l={authorsImageUrls:[void 0]},u=[{value:"Load needed modules",id:"load-needed-modules",level:2},{value:"Assemble existing array",id:"assemble-existing-array",level:2},{value:"Make persistant on Alpine:",id:"make-persistant-on-alpine",level:2}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Sometimes you need RAID0 for increased capacity and speed."),(0,a.kt)("h2",{id:"load-needed-modules"},"Load needed modules"),(0,a.kt)("p",null,"Start with loading the raid0 kernel module:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"modprobe raid0\n")),(0,a.kt)("p",null,"Add it to /etc/modules-load.d so it gets loaded during next reboot:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"echo raid0 >> /etc/modules-load.d/raid0.conf\n")),(0,a.kt)("h2",{id:"assemble-existing-array"},"Assemble existing array"),(0,a.kt)("p",null,"Find UUID of target array:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"blkid\n")),(0,a.kt)("p",null,"Assemble using mdadm:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"mdadm --assemble /dev/md0 --uuid <array_uuid>\n")),(0,a.kt)("h2",{id:"make-persistant-on-alpine"},"Make persistant on Alpine:"),(0,a.kt)("p",null,"Create the /etc/mdadm.conf file so mdadm knows how your RAID is set up:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"mdadm --detail --scan > /etc/mdadm.conf\n")),(0,a.kt)("p",null,"To make sure the raid devices start during the next reboot run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"rc-update add mdadm-raid\n")),(0,a.kt)("p",null,"To use the raid array in /etc/fstab at boot, the mdadm service must be started at boot time:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"rc-update add mdadm boot\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"rc-update add mdadm-raid boot\n")),(0,a.kt)("p",null,"Finally, to persist changes in ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc")," directory, run (Alpine only!):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"lbu ci\n")))}c.isMDXComponent=!0}}]);