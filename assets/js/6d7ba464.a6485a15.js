"use strict";(self.webpackChunkdocion=self.webpackChunkdocion||[]).push([[9408],{7010:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"kubernetes","metadata":{"permalink":"/docion/blog/kubernetes","editUrl":"https://github.com/gnuion/docion/tree/gh-edits/blog/2022-10-29-kubernetes/index.mdx","source":"@site/blog/2022-10-29-kubernetes/index.mdx","title":"Kubernetes","description":"YAML in Kubernetes","date":"2022-10-29T00:00:00.000Z","formattedDate":"October 29, 2022","tags":[{"label":"angular","permalink":"/docion/blog/tags/angular"}],"readingTime":1.455,"hasTruncateMarker":false,"authors":[{"name":"Jon Zuka","title":"Blog owner","url":"https://github.com/gnuion","imageURL":"https://github.com/gnuion.png","key":"gnuion"}],"frontMatter":{"slug":"kubernetes","title":"Kubernetes","authors":["gnuion"],"tags":["angular"]},"nextItem":{"title":"Minikube","permalink":"/docion/blog/minikube"}},"content":"## YAML in Kubernetes\\nA simple `pod-definition.yml` file:\\n\\n```yaml\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: myapp-pod\\n  labels:\\n    app: myapp\\n    type: front-end\\n    (any other key value pair)\\nspec:\\n  containers:\\n    - name: nginx-container\\n      image: docker.io/nginx\\n```\\n\\n## Pod commands\\n\\nThe following will create the pod:\\n\\n`kubectl create -f pod-definition.yml`\\n\\nTo see pods use:\\n```\\nkubectl get pods\\n```\\n\\nTo view detailed information about `my-app-pod` use\\"\\n\\n```\\nkubectl describe pod myapp-pod\\n```\\n\\n## CRI-O\\n\\nIf using crio, you can see your running containers using:\\n\\n```\\ncrictl ps\\n```\\n\\n## Replica Controller (deprecated)\\n\\nA simple `rc-definition.yml` file:\\n\\n```yaml\\napiVersion: v1\\nkind: ReplicationController\\nmetadata:\\n  name: myapp-rc\\n  labels:\\n    app: myapp\\n    type: front-end\\nspec:\\n  template:\\n    metadata:\\n      name: myapp-pod\\n      labels:\\n        app: myapp\\n        type: front-end\\n    spec:\\n      containers:\\n        - name: nginx-container\\n          image: docker.io/nginx\\n  replicas: 3\\n```\\n\\nNote that the template is just the pod definition we created previously.\\n\\nThe following will create the ReplicationController:\\n\\n`kubectl create -f rc-definition.yml`\\n\\nTo see pods use:\\n```\\nkubectl get rc\\n```\\n\\n## Replica Set\\n\\nA simple `replicaset-definition.yml` file. Node the __apiVersion__\\n\\n```yml\\napiVersion: apps/v1\\nkind: ReplicaSet\\nmetadata:\\n  name: myapp-replicaset\\n  labels:\\n    app: myapp\\n    type: front-end\\nspec:\\n  template:\\n    metadata:\\n      name: myapp-pod\\n      labels:\\n        app: myapp\\n        type: front-end\\n    spec:\\n      containers:\\n        - name: nginx-container\\n          image: docker.io/nginx\\n  replicas: 3\\n  selector:\\n    matchLabels:\\n      type: front-end\\n```\\n\\nThe key difference is the selector key, which takes other pods into consideration. If skipped, the value is assumed to be the same as the labels.\\n\\nTo replace a ReplicaSet with a new definition, run:\\n\\n```\\nkubectl replace -f replicaset-definition.yml\\n```\\n\\nTo scale replicas use:\\n\\n```\\nkubectl scale --replicas=6 -f replicaset-definition.yml\\n```\\n\\n## Deployments\\n\\nThe content of the Deployment definition file is similar to the ReplicaSet definition file, except for the __kind__.\\n\\n:::tip\\nTo see all created objects at once, run:\\n```\\nkubectl get all\\n```\\n:::"},{"id":"minikube","metadata":{"permalink":"/docion/blog/minikube","editUrl":"https://github.com/gnuion/docion/tree/gh-edits/blog/2022-10-28-minikube/index.mdx","source":"@site/blog/2022-10-28-minikube/index.mdx","title":"Minikube","description":"Kubernetes is a enterprise application and is designed to run across multiple machines. Each machine is called a node.","date":"2022-10-28T00:00:00.000Z","formattedDate":"October 28, 2022","tags":[{"label":"angular","permalink":"/docion/blog/tags/angular"}],"readingTime":0.785,"hasTruncateMarker":false,"authors":[{"name":"Jon Zuka","title":"Blog owner","url":"https://github.com/gnuion","imageURL":"https://github.com/gnuion.png","key":"gnuion"}],"frontMatter":{"slug":"minikube","title":"Minikube","authors":["gnuion"],"tags":["angular"]},"prevItem":{"title":"Kubernetes","permalink":"/docion/blog/kubernetes"},"nextItem":{"title":"Angular in Docker","permalink":"/docion/blog/angular-in-docker"}},"content":"Kubernetes is a enterprise application and is designed to run across multiple machines. Each machine is called a node. \\n\\n## Setting up a learning environment\\n\\nWhen learning, we might have only one machine available. In that case we can create a single node setup using [minikube](https://minikube.sigs.k8s.io/docs/start/). Here we assume we already know basics of docker. Continue buy installing minikube following the documentation for your specific OS. In ArchLinux type:\\n\\n```\\nsudo pacman -Sy minikube\\n```\\n\\nTo start a single node cluster run:\\n\\n```\\nminikube start\\n```\\n\\nSelect docker as the execution engine. VMs are also an option, but consume more resources. You can check the newly created cluster using:\\n\\n``` \\nminikube status\\n```\\n\\nTo stop the cluster run:\\n\\n```\\nminikube stop\\n```\\n\\nVisit the [documentation](https://minikube.sigs.k8s.io/docs/start/) for more minikube commands.\\n\\n## Interact with your cluster\\n\\nIf you already have kubectl installed, you can now use it to access your shiny new cluster:\\n\\n```\\nkubectl get po -A\\n```"},{"id":"angular-in-docker","metadata":{"permalink":"/docion/blog/angular-in-docker","editUrl":"https://github.com/gnuion/docion/tree/gh-edits/blog/2022-10-25-angular-in-docker/index.mdx","source":"@site/blog/2022-10-25-angular-in-docker/index.mdx","title":"Angular in Docker","description":"Angular not always supports the latest node.js version. Docker can help keep our system clean.","date":"2022-10-25T00:00:00.000Z","formattedDate":"October 25, 2022","tags":[{"label":"angular","permalink":"/docion/blog/tags/angular"}],"readingTime":0.795,"hasTruncateMarker":false,"authors":[{"name":"Jon Zuka","title":"Blog owner","url":"https://github.com/gnuion","imageURL":"https://github.com/gnuion.png","key":"gnuion"}],"frontMatter":{"slug":"angular-in-docker","title":"Angular in Docker","authors":["gnuion"],"tags":["angular"]},"prevItem":{"title":"Minikube","permalink":"/docion/blog/minikube"},"nextItem":{"title":"Make RAID0 array using MDADM","permalink":"/docion/blog/raid0-with-mdadm"}},"content":"Angular not always supports the latest node.js version. Docker can help keep our system clean.\\n\\n## Create node user\\n\\nFor best practice, create node user and append node group to current user.\\n\\n```\\nsudo useradd node\\nsudo usermod --append --groups node $USER\\n```\\n\\n## Build Angular image:\\n\\nUse the node version Angular supports. At the time of this writing it is version 14.\\n\\n```Dockerfile\\nFROM node:14-alpine\\nRUN npm install -g @angular/cli\\nUSER node\\nWORKDIR /app\\nEXPOSE 4200 49153\\nCMD npm start\\n```\\n\\nBuild the image. In this example it is tagged `ng`:\\n\\n```\\ndocker build --tag ng .\\n```\\n\\n## Using the Angular CLI within Docker\\n\\nRun the development container:\\n\\n```\\ndocker run -it -v $(pwd):/app -p 4200:4200 -p 49153:49153 --name ng ng sh\\n```\\n\\nCreate a new project:\\n\\n```\\nng new --skip-git\\n```\\n\\nAdjust `start` script in package.json to:\\n\\n```\\n start\\": \\"ng serve --host 0.0.0.0 --poll\\"\\n```\\n\\nOtherwise the port would not be accessible from outside the container."},{"id":"raid0-with-mdadm","metadata":{"permalink":"/docion/blog/raid0-with-mdadm","editUrl":"https://github.com/gnuion/docion/tree/gh-edits/blog/2022-10-15-raid0-with-mdadm/index.mdx","source":"@site/blog/2022-10-15-raid0-with-mdadm/index.mdx","title":"Make RAID0 array using MDADM","description":"Sometimes you need RAID0 for increased capacity and speed.","date":"2022-10-15T00:00:00.000Z","formattedDate":"October 15, 2022","tags":[{"label":"web3","permalink":"/docion/blog/tags/web-3"}],"readingTime":0.745,"hasTruncateMarker":false,"authors":[{"name":"Jon Zuka","title":"Blog owner","url":"https://github.com/gnuion","imageURL":"https://github.com/gnuion.png","key":"gnuion"}],"frontMatter":{"slug":"raid0-with-mdadm","title":"Make RAID0 array using MDADM","authors":["gnuion"],"tags":["web3"]},"prevItem":{"title":"Angular in Docker","permalink":"/docion/blog/angular-in-docker"},"nextItem":{"title":"Build Chia Docker Container","permalink":"/docion/blog/build-chia-docker-container"}},"content":"Sometimes you need RAID0 for increased capacity and speed.\\n\\n## Load needed modules\\n\\nStart with loading the raid0 kernel module:\\n\\n```\\nmodprobe raid0\\n```\\n\\nAdd it to /etc/modules-load.d so it gets loaded during next reboot:\\n\\n```\\necho raid0 >> /etc/modules-load.d/raid0.conf\\n```\\n\\n## Assemble existing array\\n\\nFind UUID of target array:\\n\\n```\\nblkid\\n```\\n\\nAssemble using mdadm:\\n\\n```\\nmdadm --assemble /dev/md0 --uuid <array_uuid>\\n```\\n\\n## Make persistant on Alpine:\\n\\nCreate the /etc/mdadm.conf file so mdadm knows how your RAID is set up:\\n\\n```\\nmdadm --detail --scan > /etc/mdadm.conf\\n```\\n\\nTo make sure the raid devices start during the next reboot run:\\n\\n```\\nrc-update add mdadm-raid\\n```\\n\\nTo use the raid array in /etc/fstab at boot, the mdadm service must be started at boot time:\\n\\n```\\nrc-update add mdadm boot\\n```\\n\\n```\\nrc-update add mdadm-raid boot\\n```\\n\\nFinally, to persist changes in `/etc` directory, run (Alpine only!):\\n\\n```\\nlbu ci\\n```"},{"id":"build-chia-docker-container","metadata":{"permalink":"/docion/blog/build-chia-docker-container","editUrl":"https://github.com/gnuion/docion/tree/gh-edits/blog/2022-10-13-build-chia-docker-container/index.mdx","source":"@site/blog/2022-10-13-build-chia-docker-container/index.mdx","title":"Build Chia Docker Container","description":"Chia Blockchain is a protocol that uses Proof-Of-Space-Time (PoST) for concensus.","date":"2022-10-13T00:00:00.000Z","formattedDate":"October 13, 2022","tags":[{"label":"web3","permalink":"/docion/blog/tags/web-3"}],"readingTime":0.385,"hasTruncateMarker":false,"authors":[{"name":"Jon Zuka","title":"Blog owner","url":"https://github.com/gnuion","imageURL":"https://github.com/gnuion.png","key":"gnuion"}],"frontMatter":{"slug":"build-chia-docker-container","title":"Build Chia Docker Container","authors":["gnuion"],"tags":["web3"]},"prevItem":{"title":"Make RAID0 array using MDADM","permalink":"/docion/blog/raid0-with-mdadm"},"nextItem":{"title":"Virtualization with QEMU","permalink":"/docion/blog/virtualization-with-qemu"}},"content":"Chia Blockchain is a protocol that uses Proof-Of-Space-Time (PoST) for concensus.\\n\\n[Docker](https://docs.docker.com/get-started/overview/) enables you to seperate your applicatin from your infrastructure so you can deliver software quickly.\\n\\n## Run chia docker\\n\\n- Clone repe:\\n\\n```\\ngit clone https://github.com/gnuion/chia-docker.git\\n```\\n\\n- Configure and run `docker-compose up`. You can use my image, or build it yourself.\\n\\nYou can then start and stop your services using `docker-compose up` and `docker-compose down` respectively.\\n\\n## Build it yourself\\n\\nVisit [Chia in Docker](https://github.com/gnuion/chia-docker/)"},{"id":"virtualization-with-qemu","metadata":{"permalink":"/docion/blog/virtualization-with-qemu","editUrl":"https://github.com/gnuion/docion/tree/gh-edits/blog/2022-10-12virtualization-with-qemu/index.mdx","source":"@site/blog/2022-10-12virtualization-with-qemu/index.mdx","title":"Virtualization with QEMU","description":"A virtual machine (VM) is a virtual environment that functions as a virtual computer system with its own CPU, memory, network interface, and storage, created on a physical hardware system.","date":"2022-10-12T00:00:00.000Z","formattedDate":"October 12, 2022","tags":[{"label":"web","permalink":"/docion/blog/tags/web"}],"readingTime":0.275,"hasTruncateMarker":false,"authors":[{"name":"Jon Zuka","title":"Blog owner","url":"https://github.com/gnuion","imageURL":"https://github.com/gnuion.png","key":"gnuion"}],"frontMatter":{"slug":"virtualization-with-qemu","title":"Virtualization with QEMU","authors":["gnuion"],"tags":["web"]},"prevItem":{"title":"Build Chia Docker Container","permalink":"/docion/blog/build-chia-docker-container"},"nextItem":{"title":"Scaffolding React App","permalink":"/docion/blog/scaffolding-react-app"}},"content":"A virtual machine (VM) is a virtual environment that functions as a virtual computer system with its own CPU, memory, network interface, and storage, created on a physical hardware system.\\n\\nOne easy way to get started in [ArchLinux](https://wiki.archlinux.org/title/Virt-Manager) is with VirtManager. The GUI is straighforward.\\n\\n```\\npacman -S virt-manager qemu-desktop libvirt edk2-ovmf dnsmasq iptables-nft\\n```"},{"id":"scaffolding-react-app","metadata":{"permalink":"/docion/blog/scaffolding-react-app","editUrl":"https://github.com/gnuion/docion/tree/gh-edits/blog/2022-10-10-react-app-scaffold/index.mdx","source":"@site/blog/2022-10-10-react-app-scaffold/index.mdx","title":"Scaffolding React App","description":"React is a library it doesn\'t care about project structure. You have to manage it instead.","date":"2022-10-10T00:00:00.000Z","formattedDate":"October 10, 2022","tags":[{"label":"web","permalink":"/docion/blog/tags/web"}],"readingTime":0.37,"hasTruncateMarker":false,"authors":[{"name":"Jon Zuka","title":"Blog owner","url":"https://github.com/gnuion","imageURL":"https://github.com/gnuion.png","key":"gnuion"}],"frontMatter":{"slug":"scaffolding-react-app","title":"Scaffolding React App","authors":["gnuion"],"tags":["web"]},"prevItem":{"title":"Virtualization with QEMU","permalink":"/docion/blog/virtualization-with-qemu"},"nextItem":{"title":"Welcome","permalink":"/docion/blog/welcome"}},"content":"React is a library it doesn\'t care about project structure. You have to manage it instead.\\n\\nScaffolding using [vite](https://vitejs.dev/guide/):\\n\\n```bash\\npnpm create vite\\n```\\n\\nThen follow the prompts!\\n\\n:::tip\\nCheck out Awesome Vite for [community maintained templates](https://github.com/vitejs/awesome-vite#templates) that include other tools or target different frameworks. You can use a tool like [degit](https://github.com/Rich-Harris/degit) to scaffold your project with the [Vitamin](https://github.com/wtchnm/Vitamin) template.\\n\\n```\\nnpx degit wtchnm/Vitamin#main my-app\\ncd my-project\\n\\npnpm install\\npnpm run dev\\n```\\n\\n:::"},{"id":"welcome","metadata":{"permalink":"/docion/blog/welcome","editUrl":"https://github.com/gnuion/docion/tree/gh-edits/blog/2021-08-26-welcome/index.md","source":"@site/blog/2021-08-26-welcome/index.md","title":"Welcome","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2021-08-26T00:00:00.000Z","formattedDate":"August 26, 2021","tags":[{"label":"facebook","permalink":"/docion/blog/tags/facebook"},{"label":"hello","permalink":"/docion/blog/tags/hello"},{"label":"docusaurus","permalink":"/docion/blog/tags/docusaurus"}],"readingTime":0.405,"hasTruncateMarker":false,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","imageURL":"https://github.com/slorber.png","key":"slorber"},{"name":"Yangshun Tay","title":"Front End Engineer @ Facebook","url":"https://github.com/yangshun","imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["slorber","yangshun"],"tags":["facebook","hello","docusaurus"]},"prevItem":{"title":"Scaffolding React App","permalink":"/docion/blog/scaffolding-react-app"},"nextItem":{"title":"MDX Blog Post","permalink":"/docion/blog/mdx-blog-post"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\n\\nSimply add Markdown files (or folders) to the `blog` directory.\\n\\nRegular blog authors can be added to `authors.yml`.\\n\\nThe blog post date can be extracted from filenames, such as:\\n\\n- `2019-05-30-welcome.md`\\n- `2019-05-30-welcome/index.md`\\n\\nA blog post folder can be convenient to co-locate blog post images:\\n\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\n\\nThe blog supports tags as well!\\n\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"mdx-blog-post","metadata":{"permalink":"/docion/blog/mdx-blog-post","editUrl":"https://github.com/gnuion/docion/tree/gh-edits/blog/2021-08-01-mdx-blog-post.mdx","source":"@site/blog/2021-08-01-mdx-blog-post.mdx","title":"MDX Blog Post","description":"Blog posts support Docusaurus Markdown features, such as MDX.","date":"2021-08-01T00:00:00.000Z","formattedDate":"August 1, 2021","tags":[{"label":"docusaurus","permalink":"/docion/blog/tags/docusaurus"}],"readingTime":0.175,"hasTruncateMarker":false,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","imageURL":"https://github.com/slorber.png","key":"slorber"}],"frontMatter":{"slug":"mdx-blog-post","title":"MDX Blog Post","authors":["slorber"],"tags":["docusaurus"]},"prevItem":{"title":"Welcome","permalink":"/docion/blog/welcome"},"nextItem":{"title":"Long Blog Post","permalink":"/docion/blog/long-blog-post"}},"content":"Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\\n\\n:::tip\\n\\nUse the power of React to create interactive blog posts.\\n\\n```js\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n```\\n\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n\\n:::"},{"id":"long-blog-post","metadata":{"permalink":"/docion/blog/long-blog-post","editUrl":"https://github.com/gnuion/docion/tree/gh-edits/blog/2019-05-29-long-blog-post.md","source":"@site/blog/2019-05-29-long-blog-post.md","title":"Long Blog Post","description":"This is the summary of a very long blog post,","date":"2019-05-29T00:00:00.000Z","formattedDate":"May 29, 2019","tags":[{"label":"hello","permalink":"/docion/blog/tags/hello"},{"label":"docusaurus","permalink":"/docion/blog/tags/docusaurus"}],"readingTime":2.05,"hasTruncateMarker":true,"authors":[{"name":"Endilie Yacop Sucipto","title":"Maintainer of Docusaurus","url":"https://github.com/endiliey","imageURL":"https://github.com/endiliey.png","key":"endi"}],"frontMatter":{"slug":"long-blog-post","title":"Long Blog Post","authors":"endi","tags":["hello","docusaurus"]},"prevItem":{"title":"MDX Blog Post","permalink":"/docion/blog/mdx-blog-post"},"nextItem":{"title":"First Blog Post","permalink":"/docion/blog/first-blog-post"}},"content":"This is the summary of a very long blog post,\\n\\nUse a `\x3c!--` `truncate` `--\x3e` comment to limit blog post size in the list view.\\n\\n\x3c!--truncate--\x3e\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"},{"id":"first-blog-post","metadata":{"permalink":"/docion/blog/first-blog-post","editUrl":"https://github.com/gnuion/docion/tree/gh-edits/blog/2019-05-28-first-blog-post.md","source":"@site/blog/2019-05-28-first-blog-post.md","title":"First Blog Post","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","date":"2019-05-28T00:00:00.000Z","formattedDate":"May 28, 2019","tags":[{"label":"hola","permalink":"/docion/blog/tags/hola"},{"label":"docusaurus","permalink":"/docion/blog/tags/docusaurus"}],"readingTime":0.12,"hasTruncateMarker":false,"authors":[{"name":"Gao Wei","title":"Docusaurus Core Team","url":"https://github.com/wgao19","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"}],"frontMatter":{"slug":"first-blog-post","title":"First Blog Post","authors":{"name":"Gao Wei","title":"Docusaurus Core Team","url":"https://github.com/wgao19","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"},"tags":["hola","docusaurus"],"hide_table_of_contents":false},"prevItem":{"title":"Long Blog Post","permalink":"/docion/blog/long-blog-post"}},"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"}]}')}}]);