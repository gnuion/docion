"use strict";(self.webpackChunkdocion=self.webpackChunkdocion||[]).push([[8768],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(n),g=i,m=u["".concat(s,".").concat(g)]||u[g]||p[g]||a;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},1697:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:1},o="Git",l={unversionedId:"git-ci-cd/git",id:"git-ci-cd/git",title:"Git",description:"Git is a distributed version control system. It tracks changes in any set of files.",source:"@site/docs/git-ci-cd/git.md",sourceDirName:"git-ci-cd",slug:"/git-ci-cd/git",permalink:"/docion/docs/git-ci-cd/git",draft:!1,editUrl:"https://github.com/gnuion/docion/tree/gh-edits/docs/git-ci-cd/git.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Git CI/CD",permalink:"/docion/docs/category/git-cicd"},next:{title:"Kubernetes",permalink:"/docion/docs/category/kubernetes"}},s={},c=[{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Set defaut editor",id:"set-defaut-editor",level:3},{value:"Set user",id:"set-user",level:3},{value:"SSH key",id:"ssh-key",level:3},{value:"Basics",id:"basics",level:2},{value:"git add",id:"git-add",level:3},{value:"<code>.gitignore</code>",id:"gitignore",level:4},{value:"git checkout",id:"git-checkout",level:3},{value:"HEAD vs Head",id:"head-vs-head",level:4}],d={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"git"},"Git"),(0,i.kt)("p",null,"Git is a distributed version control system. It tracks changes in any set of files. "),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,"If you don't already have ",(0,i.kt)("strong",{parentName:"p"},"git")," installed, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pacman -S git\n")),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("h3",{id:"set-defaut-editor"},"Set defaut editor"),(0,i.kt)("p",null,"To set the default editor for git, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'git config --global core.editor "/usr/bin/nano"\n')),(0,i.kt)("h3",{id:"set-user"},"Set user"),(0,i.kt)("p",null,"To set the default user for git, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'git config --global user.name "myUserName"\ngit config --global user.email "myEmail@example.com"\n')),(0,i.kt)("p",null,"To set the user for a specific git repository, run the same commands, but without ",(0,i.kt)("strong",{parentName:"p"},"--global"),"."),(0,i.kt)("h3",{id:"ssh-key"},"SSH key"),(0,i.kt)("p",null,"When working with remote repositories, an SSH key is often needed for authentication. First, generate an ",(0,i.kt)("strong",{parentName:"p"},"SSH key"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-keygen -t ed25519\n")),(0,i.kt)("p",null,"Your SSH public key should be located in ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.ssh/id_ed25519.pub"),". This you can share with your git remote hosting solution."),(0,i.kt)("h2",{id:"basics"},"Basics"),(0,i.kt)("h3",{id:"git-add"},"git add"),(0,i.kt)("p",null," ",(0,i.kt)("strong",{parentName:"p"},"git add")," is used to add file into Git's staging area. All file changes must be staged before they can be committed. To stage all files, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git add .\n")),(0,i.kt)("h4",{id:"gitignore"},(0,i.kt)("inlineCode",{parentName:"h4"},".gitignore")),(0,i.kt)("p",null," ",(0,i.kt)("strong",{parentName:"p"},".gitignore")," specifies intentionally untracked files that Git should ignore."),(0,i.kt)("h3",{id:"git-checkout"},"git checkout"),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"git checkout")," command lets you navigate between the branches and commits."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout [branchName] # go to branch branchName\ngit checkout [commitHash] # go to commit commitHash\n")),(0,i.kt)("h4",{id:"head-vs-head"},"HEAD vs Head"),(0,i.kt)("p",null,"The most recent commit in a branch is called ",(0,i.kt)("strong",{parentName:"p"},"Head"),". The ",(0,i.kt)("strong",{parentName:"p"},"Head")," of the active branch shows as ",(0,i.kt)("strong",{parentName:"p"},"HEAD"),"."))}u.isMDXComponent=!0}}]);